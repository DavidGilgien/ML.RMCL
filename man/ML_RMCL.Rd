% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ML-MCL-edgeList.R
\name{ML_RMCL}
\alias{ML_RMCL}
\title{Multi-Level Regularized Markov Clustering}
\usage{
ML_RMCL(g, r = 2, reg = TRUE, iter.max = 200, n.threshold = 200,
  last.reg = TRUE, eps = 0.001, save.p1 = NULL, load.p1 = NULL,
  iter.curt = 4, coarse.weight = TRUE, init.weight.trans = FALSE,
  curt.weight.trans = FALSE, timer = FALSE)
}
\arguments{
\item{g}{graph object of class \code{\link{ELgraph}} on which to perform the clustering}

\item{r}{inflation parameter. A higher value yields more refined clusters.}

\item{reg}{boolean value. When \code{TRUE}, the MCL iterations in phase 2 are regularized.}

\item{iter.max}{integer: maximum number of MCL iterations during phase 3 before the matrix is interpreted as a clustering. The function gives a warning when reached.}

\item{n.threshold}{integer: number of nodes under which phase 1 stops the coarsening.}

\item{last.reg}{boolean value. When \code{TRUE}, the MCL iterations in phase 3 are regularized.}

\item{eps}{integer: epsilon threshold for the pruning operation. During pruning, values under \code{eps/m} are set to 0, where \code{m} is the number of non-zero entries in the column}

\item{save.p1}{string: a name for the storing a the graph hierarchy after the coarsening. A file will be saved at "./phase1/\code{save.p1}.rds". The algorithm can then be used with this file as a strating point by giving the name as the \code{load.p1} parameter.}

\item{load.p1}{string: a name for loading the graph hierarchy. When not \code{NULL}, \code{g} will not be used but the function will take the file "./phase1/\code{load.p1}.rds" as input. Can be used when phase 1 is time consuming and we want different tests with the same coarsening.}

\item{iter.curt}{integer: number of iteration of MCL during phase 2.}

\item{coarse.weight}{boolean value. When \code{TRUE}, the coarsening phase keeps the edges' weights as indications of the number of merged edges.}

\item{init.weight.trans}{boolean value. When \code{TRUE}, the algorithm performs a weight transformation step at the very beginning, before the coarsening.}

\item{curt.weight.trans}{boolean value. When \code{TRUE}, the algorithm performs a weight transformation step for each flow matrix initialisation during phase 2.}

\item{timer}{boolean value. When \code{TRUE}, the algorithm returns a vector of phases duration in addition of the clustering.}
}
\value{
A vector of size \code{n} describing the associated cluster of each node.
When \code{timer=TRUE}, a list of two elements: \code{res} the clustering vector and 
\code{time} a vector of size 3 with the duration of each phase in seconds.
}
\description{
This function implements the multi-level regularized markov clustering. It uses flow simulation of a graph to find clusters.
}
\examples{
g = generateEdgelist(n = 1000)
clustering = ML_RMCL(g)
}
\keyword{clustering}
\keyword{flow}
\keyword{markov}
\keyword{multi-level}
\keyword{multilevel}
\keyword{regularizd}
\keyword{simulation}
